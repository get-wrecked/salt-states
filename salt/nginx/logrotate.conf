{% set nginx = pillar.get('nginx', {}) -%}
{% set dump_to_s3 = nginx.get('dump_to_s3', False) -%}
{% set target_bucket = nginx.get('s3_bucket') %}

/var/log/nginx/*.log {
    daily
    missingok
    rotate 10
    {% if dump_to_s3 %}
    dateext
    # Hour and minute not supported natively by logrotate, thus insert a sentinel
    # for now and replace it in the postrotate with actual values
    dateformat -COMPRESS-ME-%s
    {% endif %}
    compress
    delaycompress
    notifempty
    create 0640 nginx adm
    postrotate
        invoke-rc.d nginx rotate >/dev/null 2>&1
        {% if dump_to_s3 %}
        # Now we know that files have been reloaded by nginx and can be
        # compressed safely
        find /var/log/nginx -name "*COMPRESS-ME-*" | while read source_file; do
            time_id=$(date -u +"%Y-%m-%dT%H:%MZ")
            destination=$(echo $source_file | sed s/COMPRESS-ME-.*/$time_id/)
            mv "$source_file" "$destination"
            gzip "$destination"
            filename="$(basename "$destination").gz"
            s3-uploader "${destination}.gz" "{{ target_bucket }}/{{ grains.id }}/nginx/$filename" && rm "${destination}.gz"
        done
        {% endif %}
    endscript
}
