upstream {{ server_name }}_backend {
    server {{ backend }}:{{ backend_port }};
    keepalive 8;
}

server {
  listen [::]:80;
  server_name {{ server_name }};
  charset utf-8;
  return 301 https://$server_name$request_uri;
}

server {
  listen [::]:443 ssl;
  server_name {{ server_name }};
  charset utf-8;

  client_max_body_size 10m;

  ssl_certificate ssl/{{ server_name }}.crt;
  ssl_certificate_key private/{{ server_name }}.key;
  add_header Strict-Transport-Security max-age=31536000 always;

  error_page 504 /504-{{ server_name }}.html;

  location / {
    proxy_pass {{ backend_protocol }}://{{ server_name }}_backend;
    include proxy_params;
    include proxy_cache_params;

    # Override the HTTP Host header to the name of the upstream host.
    # (eg. *.herokuapp.com, prevents having to configure Heroku with the
    # correct hostname)
    proxy_set_header Host "{{ backend }}";

    proxy_ssl_trusted_certificate {{ upstream_ca|default('/etc/nginx/ssl/all-certs.pem') }};
    proxy_ssl_name {{ backend }};

    # The verification depth needed for Heroku is currently only 2, but since they might
    # change CA and certificate layout on a whim we allow a depth of 3.
    proxy_ssl_verify_depth 3;
  }

  location = /504-{{ server_name }}.html {
    root html;
    internal;
  }
}
